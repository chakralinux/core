#
# QT Packages for Chakra, part of chakra-project.org
#
# maintainer: Fabian Kosmale <inkane@chakra-project.org>
# heavily sto^H^H^H inspired by Andrea Scarpino' PKGBUILD from Arch

pkgbase=qt5
pkgname=('qt5-base'
         'qt5-qt3d'
         'qt5-connectivity'
         'qt5-canvas3d'
         'qt5-declarative'
         'qt5-doc'
         'qt5-enginio'
         'qt5-graphicaleffects'
         'qt5-imageformats'
         'qt5-location'
         'qt5-multimedia'
         'qt5-quick1'
         'qt5-quickcontrols'
         'qt5-script'
         'qt5-sensors'
         'qt5-serialport'
         'qt5-svg'
         'qt5-tools'
         'qt5-translations'
         'qt5-wayland'
         'qt5-webchannel'
         'qt5-webengine'
         'qt5-webkit'
         'qt5-websockets'
         'qt5-x11extras'
         'qt5-xmlpatterns')
pkgver=5.5.0
pkgrel=1
arch=('x86_64')
url='http://qt-project.org/'
license=('GPL3' 'LGPL' 'FDL' 'custom')
makedepends=('libxcb' 'xcb-proto' 'xcb-util' 'xcb-util-image' 'xcb-util-wm' 'xcb-util-keysyms'
            'mesa' 'at-spi2-core' 'alsa-lib' 
            'libjpeg-turbo' 'cups' 'libpulse' 'hicolor-icon-theme' 'desktop-file-utils'
            'postgresql-libs' 'libmariadbclient' 'sqlite3' 'unixodbc' 'libmng'
            'python2' 'ruby' 'gperf' 'libxslt' 'libxcomposite' 'fontconfig' 'bluez'
            'openal' 'libxkbcommon' 'mtdev' 'harfbuzz' 'libwebp' 'leveldb'
            'libxcursor' 'libsm' 'libxrandr' 'libxv' 'libxi'
            'xdg-utils' 'desktop-file-utils' 'libxinerama' 'libxfixes'
            'geoclue' 'pciutils' 'nss'
            'gstreamer' 'gst-plugins-base' 'gst-plugins-good'
            'gst-plugins-bad' 'gst-plugins-ugly' 'harfbuzz' 'pkg-config')
_pkgfqn="qt-everywhere-opensource-src-${pkgver}"
source=("http://download.qt-project.org/official_releases/qt/${pkgver%.*}/${pkgver}/single/${_pkgfqn}.tar.xz"
        'assistant-qt5.desktop' 'designer-qt5.desktop' 'linguist-qt5.desktop' 'qtconfig-qt5.desktop'
        'qmlviewer.desktop'
        'qdbusviewer-qt5.desktop')
sha1sums=('4409ef12d1017a9b5e6733ea27596a6ca637a88c'
          '0862a4a39b74d0e447181d7eca31580c9d580bc8'
          'b63cab2c86505b594e32b32ae43524090fcb7d29'
          '303e0deab3ef3f1ca84856aa2e35b096bcb6b849'
          '2e0b6245c40c91fbb0a965724450b6d6883f2927'
          'b0e6c61b8364eb3f7af4dae41fa7738c3181dd96'
          '1295012599b5335f24b6945bc7ee312093339ec4')


_prlfix() {
  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

prepare() {
  cd ${_pkgfqn}

  sed -i "s|-O2|${CXXFLAGS}|" qtbase/mkspecs/common/{g++,gcc}-base.conf
  sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" qtbase/mkspecs/common/gcc-base-unix.conf
  sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS}|g" qtbase/mkspecs/common/gcc-base.conf

  # Use python2 for Python 2.x
  find . -name '*.py' -exec sed -i \
    's|#![ ]*/usr/bin/python$|&2|;s|#![ ]*/usr/bin/env python$|&2|' {} +
  # in qtwebengine there are still a lot of relative calls which need a workaround
  mkdir -p "${srcdir}"/python2-path
  ln -sf /usr/bin/python2 "${srcdir}"/python2-path/python
}

build() {
  cd $srcdir/$_pkgfqn
  # reenable patch later
  # patch -p1 -i "$srcdir/defaultbookmarks_new.diff"

  export QTDIR="${srcdir}"/${_pkgfqn}
  export LD_LIBRARY_PATH="${QTDIR}"/qtbase/lib:"${QTDIR}"/qttools/lib:"${LD_LIBRARY_PATH}"
  export QT_PLUGIN_PATH="${QTDIR}"/qtbase/plugins

  # python2 workaround
  export PATH="${srcdir}/python2-path:$PATH"
  export _xkbconfigroot=$(pkg-config --variable=xkb_base xkeyboard-config)

  PYTHON=/usr/bin/python2 ./configure -confirm-license -opensource \
    -prefix /usr \
    -bindir /usr/lib/qt5/bin \
    -docdir /usr/share/doc/qt5 \
    -force-debug-info \
    -headerdir /usr/include/qt5 \
    -archdatadir /usr/lib/qt5 \
    -datadir /usr/share/qt5 \
    -sysconfdir /etc/xdg \
    -examplesdir /usr/share/qt5/examples \
    -plugindir /usr/lib/qt5/plugins \
    -importdir /usr/lib/qt5/imports \
    -qmldir /usr/lib/qt5/qml \
    -testsdir /usr/share/qt5/tests \
    -translationdir /usr/share/qt5/translations \
    -plugin-sql-{psql,mysql,sqlite,odbc} \
    -system-sqlite \
    -openssl-linked \
    -nomake examples \
    -no-rpath \
    -optimized-qmake \
    -dbus-linked \
    -system-harfbuzz \
    -journald \
    -reduce-relocations \
    -no-gtkstyle \
    -opengl desktop \
    -feature-menu \
    -feature-textdate \
    -xkb-config-root $_xkbconfigroot \
    -system-xkbcommon \
    -feature-ftp \
    -xcursor

  make

  # Fix docs build when qt is not installed
  sed -i "s|/usr/lib/qt5/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" \
    "${QTDIR}"/qtbase/qmake/Makefile.qmake-docs
  find "${QTDIR}" -name Makefile \
    -exec sed -i "s|/usr/lib/qt5/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  sed -i "s|/usr/lib/qt5/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" \
    "${QTDIR}"/qtbase/qmake/Makefile.qmake-docs
  find "${QTDIR}" -name Makefile \
    -exec sed -i "s|/usr/lib/qt5/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  sed -i "s|/usr/lib/qt5/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" \
    qtwebkit/Source/Makefile.api
  find "${QTDIR}" -name Makefile \
    -exec sed -i "s|/usr/lib/qt5/bin/qmlplugindump|${QTDIR}/qtdeclarative/bin/qmlplugindump|g" {} +

  make docs
}

package_qt5-base() {
  pkgdesc='A cross-platform application and UI framework'
  depends=('libtiff' 'libpng' 'libmng' 'sqlite3' 'ca-certificates' 'glib2' 'dbus'
           'fontconfig' 'libgl' 'libsm' 'libxrandr' 'libxv' 'libxi' 'alsa-lib' 'ruby'
           'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'libxinerama' 'libxcursor'
           'pulseaudio' 'gstreamer' 'gst-plugins-base' 'gst-plugins-ugly' 'gst-plugins-good'
           'xcb-util-image' 'xcb-util-keysyms'
           'xcb-util-renderutil' 'xcb-util-wm' 'libxkbcommon')
  optdepends=('postgresql-libs: PostgreSQL driver'
              'libmariadbclient: MariaDB driver'
              'unixodbc: ODBC driver'
              'mtdev: evdev plugin'
	      'libxfixes: Xfixes support')
  conflicts=('qt5' 'qt5-private-headers')
  replaces=('qt5-private-headers')
  options=("staticlibs" "debug")

  cd ${_pkgfqn}/qtbase
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt

  _prlfix

  # Fix wrong qmake path in pri file
  sed -i "s|${srcdir}/${_pkgfqn}/qtbase|/usr|" \
    "${pkgdir}"/usr/lib/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri

  # create some symlinks in /usr/bin, postfixed with -qt5
  mkdir -p ${pkgdir}/usr/bin
  for i in $(ls ${pkgdir}/usr/lib/qt5/bin); do
      ln -s /usr/lib/qt5/bin/${i} ${pkgdir}/usr/bin/${i}-qt5
  done
}

package_qt5-qt3d() {
  pkgdesc='Provides functionality for near-realtime simulation systems with support for 2D and 3D rendering in both Qt C++ and Qt Quick applications'
  depends=('qt-base' 'qt-declarative')
  options=("debug")

  cd ${_pkgfqn}/qt3d
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix
}


package_qt5-canvas3d() {
  pkgdesc='Provides a way to make OpenGL-like 3D drawing calls from Qt Quick JavaScript'
  depends=('qt5-declarative' 'qt5-base')
  options=("debug")

  cd ${_pkgfqn}/qtcanvas3d
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix
}

package_qt5-connectivity() {
  pkgdesc='Provides access to Bluetooth hardware'
  depends=('qt5-declarative' 'bluez')
  options=("debug")

  cd ${_pkgfqn}/qtconnectivity
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-declarative() {
  pkgdesc='Classes for QML and JavaScript languages'
  depends=('qt5-xmlpatterns' 'libxkbcommon')
  options=("debug")
  conflicts=('qt5')

  cd ${_pkgfqn}/qtdeclarative
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  # create some symlinks in /usr/bin, postfixed with -qt5
  install -d "${pkgdir}"/usr/bin
  for i in $(ls ${pkgdir}/usr/lib/qt5/bin); do
      ln -s /usr/lib/qt5/bin/${i} ${pkgdir}/usr/bin/${i}-qt5
  done
}

package_qt5-doc() {
  pkgdesc='A cross-platform application and UI framework (Documentation)'
  depends=('qt5-base')
  arch=('any')
  options=('docs' '!emptydirs')

  cd ${_pkgfqn}
  make INSTALL_ROOT="${pkgdir}" install_docs

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-enginio() {
  pkgdesc='A Backend-as-a-Service solution to ease the backend development for connected and data-driven application'
  depends=('qt5-declarative')
  options=("debug")

  cd ${_pkgfqn}/qtenginio
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-xmlpatterns() {
  pkgdesc='Support for XPath, XQuery, XSLT and XML schema validation'
  depends=('qt5-base')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtxmlpatterns
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  # create some symlinks in /usr/bin, postfixed with -qt5
  install -d "${pkgdir}"/usr/bin
  for i in $(ls ${pkgdir}/usr/lib/qt5/bin); do
      ln -s /usr/lib/qt5/bin/${i} ${pkgdir}/usr/bin/${i}-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-translations() {
  pkgdesc='A cross-platform application and UI framework (Translations)'
  depends=('qt5-base')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qttranslations
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-multimedia() {
  pkgdesc='A cross-platform application and UI framework (QtMultimedia)'
  depends=('qt5-declarative' 'libpulse' 'gstreamer' 'openal')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtmultimedia
  make INSTALL_ROOT="${pkgdir}" install

   _prlfix
}

package_qt5-graphicaleffects() {
  pkgdesc='Graphical effects for use with Qt Quick 2'
  depends=('qt5-declarative')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtgraphicaleffects
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-imageformats() {
  pkgdesc='Plugins for additional image formats: TIFF, MNG, TGA, WBMP'
  depends=('qt5-base' 'jasper' 'libmng' 'libwebp')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtimageformats
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-location() {
  pkgdesc='Provides access to position, satellite and area monitoring classes'
  depends=('qt5-declarative' 'geoclue')
  options=("debug")

  cd ${_pkgfqn}/qtlocation
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-quick1() {
  pkgdesc='Qt Declarative is provided for Qt 4 compatibility'
  depends=('qt5-webkit' 'qt5-script')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtquick1
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix 
  
  # create some symlinks in /usr/bin, postfixed with -qt5
  install -d "${pkgdir}"/usr/bin
  for i in $(ls ${pkgdir}/usr/lib/qt5/bin); do
      ln -s /usr/lib/qt5/bin/${i} ${pkgdir}/usr/bin/${i}-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-quickcontrols() {
  pkgdesc='Reusable Qt Quick based UI controls to create classic desktop-style user interfaces'
  depends=('qt5-declarative')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtquickcontrols
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-script() {
  pkgdesc='Classes for making Qt applications scriptable. Provided for Qt 4.x compatibility'
  depends=('qt5-base')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtscript
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-sensors() {
  pkgdesc='Provides access to sensor hardware and motion gesture recognition'
  depends=('qt5-declarative')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtsensors
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-serialport() {
  pkgdesc='Provides access to hardware and virtual serial ports'
  depends=('qt5-base')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtserialport
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-svg() {
  pkgdesc='Classes for displaying the contents of SVG files'
  depends=('qt5-base')
  conflicts=('qt5')
  options=("debug")

  cd ${_pkgfqn}/qtsvg
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-tools() {
  pkgdesc='A cross-platform application and UI framework (Development Tools, QtHelp)'
  depends=('qt5-webkit' 'desktop-file-utils' 'qt5-translations' 'hicolor-icon-theme'
           'xdg-utils')
  optdepends=('qt5-doc: documentation')
  conflicts=('qt5')
  options=("staticlibs" "debug")

  cd ${_pkgfqn}/qttools
  make INSTALL_ROOT="${pkgdir}" install

  # install missing icons and desktop files
  for icon in src/linguist/linguist/images/icons/linguist-*-32.png ; do
    size=$(echo $(basename ${icon}) | cut -d- -f2)
    install -p -D -m644 ${icon} \
      "${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/linguist-qt5.png"
  done

  install -D -m644 src/assistant/assistant/images/assistant.png \
    "${pkgdir}/usr/share/icons/hicolor/32x32/apps/assistant-qt5.png"
  install -D -m644 src/assistant/assistant/images/assistant-128.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/assistant-qt5.png"
  install -D -m644 src/designer/src/designer/images/designer.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/designer-qt5.png"
  install -D -m644 src/qdbus/qdbusviewer/images/qdbusviewer.png \
    "${pkgdir}/usr/share/icons/hicolor/32x32/apps/qdbusviewer-qt5.png"
  install -D -m644 src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/qdbusviewer-qt5.png"
  install -d "${pkgdir}/usr/share/applications"
  install -m644 "${srcdir}"/{linguist-qt5,designer-qt5,assistant-qt5,qdbusviewer-qt5}.desktop \
    "${pkgdir}/usr/share/applications/"

  _prlfix
  
  # create some symlinks in /usr/bin, postfixed with -qt5
  mkdir -p ${pkgdir}/usr/bin
  for i in $(ls ${pkgdir}/usr/lib/qt5/bin); do
      ln -s /usr/lib/qt5/bin/${i} ${pkgdir}/usr/bin/${i}-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-webkit() {
  pkgdesc='Classes for a WebKit2 based implementation and a new QML API'
  depends=('qt5-sensors' 'qt5-location' 'qt5-webchannel' 'gst-plugins-base' 'libxslt'
           'libxcomposite' 'libwebp')
  optdepends=('gst-plugins-good: Webm codec support')
  options=("debug")
  license=('GPL3' 'LGPL' 'FDL')

  cd ${_pkgfqn}/qtwebkit
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix
  
  # Fix wrong path in pc file
  perl -pi -e "s, -L${srcdir}/?\S+,,g" "${pkgdir}"/usr/lib/pkgconfig/Qt5WebKit.pc
}

package_qt5-wayland() {
  pkgdesc='Provides APIs for Wayland'
  depends=('qt5-base' 'libxcomposite' 'libxkbcommon')
  options=("debug")

  cd ${_pkgfqn}/qtwayland
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-webchannel() {
  pkgdesc='Provides access to QObject or QML objects from HTML clients for seamless integration of Qt applications with HTML/JavaScript clients'
  depends=('qt5-declarative')
  options=("debug")

  cd ${_pkgfqn}/qtwebchannel
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-webengine() {
  pkgdesc='Provides support for web applications using the Chromium browser project'
  depends=('qt5-declarative' 'nss' 'libxtst' 'libxcursor' 'libxrandr' 'alsa-lib' 'libxcomposite')
  options=("debug")
  license=('LGPL')

  cd ${_pkgfqn}/qtwebengine
  make INSTALL_ROOT="${pkgdir}" install

  rm -rf "${pkgdir}"/usr/share/doc
}

package_qt5-websockets() {
  pkgdesc='Provides WebSocket communication compliant with RFC 6455'
  depends=('qt5-declarative')
  options=("debug")
  license=('LGPL')

  cd ${_pkgfqn}/qtwebsockets
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix
}

package_qt5-x11extras() {
  pkgdesc='Provides platform-specific APIs for X11'
  depends=('qt5-base')
  conflicts=('qt5') 
  options=("debug")
  
  cd ${_pkgfqn}/qtx11extras
  make INSTALL_ROOT="${pkgdir}" install

  _prlfix
}
