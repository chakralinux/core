#
# QT Packages for Chakra, part of chakra-project.org
#
# maintainer (i686): Phil Miller <philm[at]chakra-project[dog]org>
# maintainer (x86_64): Manuel Tortosa <manutortosa[at]chakra-project[dot]org>

pkgbase=qt
pkgname=('qt' 'qt-private-headers')
pkgver=4.8.0
pkgrel=3
arch=('i686' 'x86_64')
url='http://qt.nokia.com/'
license=('GPL3' 'LGPL')
makedepends=('libtiff' 'libpng' 'libmng' 'sqlite3' 'ca-certificates' 'glib2' 'dbus'
    'fontconfig' 'libgl' 'libsm' 'libxrandr' 'libxv' 'libxi' 'alsa-lib'
    'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'mesa' 'postgresql-libs'
    'mysql' 'unixodbc' 'cups' 'libxinerama' 'libxcursor')
options=('!libtool')
_pkgfqn="qt-everywhere-opensource-src-${pkgver}"
source=("ftp://ftp.qt.nokia.com/qt/source/${_pkgfqn}.tar.gz"
        "http://chakra.sourceforge.net/sources/${pkgbase}/qt-everywhere-opensource-src-4.8.0-QTBUG-22037.patch"
        "http://chakra.sourceforge.net/sources/${pkgbase}/qt-everywhere-opensource-src-4.8.0-QTBUG-14724.patch"
        "http://chakra.sourceforge.net/sources/${pkgbase}/qt-everywhere-opensource-src-4.8.0-QTBUG-21900.patch"
        "http://chakra.sourceforge.net/sources/${pkgbase}/qt-everywhere-opensource-src-4.8.0-QUrl_toLocalFile.patch"
        "http://chakra.sourceforge.net/sources/${pkgbase}/qt-everywhere-opensource-src-4.7.4-tds_no_strict_aliasing.patch"
        "http://chakra.sourceforge.net/sources/${pkgbase}/qt-everywhere-opensource-src-4.8.0-icu_no_spam.patch"
        'assistant.desktop' 'designer.desktop' 'linguist.desktop'
        'qtconfig.desktop')
md5sums=('e8a5fdbeba2927c948d9f477a6abe904'
         '7f9592bcd5d47421455125537845b5fe'
         'f9b63a5dc2ec17d9e386959b4174477d'
         '64e3c15a0f51dc11957b2a62c79b69c9'
         '7bc255a36733d0fbc80c1902ade4beca'
         '64a910e50f98b7dcd3f03b427d6cebe3'
         'd45a908a6e1333fc4f361c8e3ab00d5a'
         'fc211414130ab2764132e7370f8e5caa'
         '85179f5e0437514f8639957e1d8baf62'
         'f11852b97583610f3dbb669ebc3e21bc'
         '6b771c8a81dd90b45e8a79afa0e5bbfd')

# source PKGBUILD && _create-kdeqt-patch
_create-kdeqt-patch() {
          #Create patches
	  echo "creating kde-qt patches"
	  local codir=$(mktemp -d)
	  mkdir -p "${codir}/kde-qt"
	  git clone git://gitorious.org/+kde-developers/qt/kde-qt.git "${codir}/kde-qt"
	  pushd "${codir}/kde-qt"
	  git checkout --track -b ${pkgver}-patched origin/${pkgver}-patched
	  local kdeqtver=$(git --no-pager show --format='%H' "${pkgver}-patched" | head -1)
	  git diff "v${pkgver}..${pkgver}-patched" | gzip > "${codir}/kde-qt-${kdeqtver}.patch.gz"
          popd
          mv "${codir}/kde-qt-${kdeqtver}.patch.gz" .
	  rm -rf "${codir}"
	  md5sum kde-qt-${kdeqtver}.patch.gz
	  echo "change kdeqtver to $kdeqtver"
}

build() {
	cd $srcdir/$_pkgfqn
#       if [ -n "${kdeqtver}" ]; then
#	  msg "applying kde-qt patches"
#	  patch -p1 -i $srcdir/kde-qt-${kdeqtver}.patch || return 1
#	  # editing qt.install
#	  sed -i -e 's/^.*kde-qt .*/        echo "   kde-qt '${kdeqtver}'"/' $startdir/qt.install
#	fi

	# revert qlist.h commit that seems to induce crashes in qDeleteAll<QList (QTBUG-22037)
	patch -Np1 -i ${srcdir}/qt-everywhere-opensource-src-4.8.0-QTBUG-22037.patch

	# Qt doesn't close orphaned file descriptors after printing (#746601, QTBUG-14724)
	patch -Np1 -i ${srcdir}/qt-everywhere-opensource-src-4.8.0-QTBUG-14724.patch 

	# Buttons in Qt applications not clickable when run under gnome-shell (#742658, QTBUG-21900)
	patch -Np1 -i ${srcdir}/qt-everywhere-opensource-src-4.8.0-QTBUG-21900.patch

	# restore Qt-4.7 behavior (which kde needs) to QUrl.toLocalfile
	# https://bugzilla.redhat.com/show_bug.cgi?id=749213
	patch -Np1 -i ${srcdir}/qt-everywhere-opensource-src-4.8.0-QUrl_toLocalFile.patch

	# workaround
	# sql/drivers/tds/qsql_tds.cpp:341:49: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
	patch -Np1 -i ${srcdir}/qt-everywhere-opensource-src-4.7.4-tds_no_strict_aliasing.patch

	# don't spam if libicu is not present at runtime
	patch -Np1 -i ${srcdir}/qt-everywhere-opensource-src-4.8.0-icu_no_spam.patch

        export QT4DIR="${srcdir}"/${_pkgfqn}
        export LD_LIBRARY_PATH=${QT4DIR}/lib:${LD_LIBRARY_PATH}

        sed -i "s|-O2|${CXXFLAGS}|" mkspecs/common/g++-base.conf
        sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" mkspecs/common/gcc-base-unix.conf
        sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS}|g" mkspecs/common/gcc-base.conf

	./configure -confirm-license -opensource \
		-prefix /usr \
		-docdir /usr/share/doc/qt \
		-plugindir /usr/lib/qt/plugins \
		-importdir /usr/lib/qt/imports \
		-datadir /usr/share/qt \
		-translationdir /usr/share/qt/translations \
		-sysconfdir /etc \
		-examplesdir /usr/share/doc/qt/examples \
		-demosdir /usr/share/doc/qt/demos \
		-plugin-sql-{psql,mysql,sqlite,odbc} \
		-system-sqlite \
		-no-phonon \
		-no-phonon-backend \
		-no-webkit \
		-graphicssystem raster \
                 -openssl-linked \
                 -nomake demos \
                 -nomake examples \
                 -nomake docs \
                 -silent \
                 -no-rpath \
                 -optimized-qmake \
                 -reduce-relocations \
                 -dbus-linked \
                 -no-openvg \
                 -xcursor
	 make
}

package_qt() {
    pkgdesc='A cross-platform application and UI framework'
    depends=('libtiff' 'libpng' 'libmng' 'sqlite3' 'ca-certificates' 'glib2' 'dbus'
      'fontconfig' 'libgl' 'libsm' 'libxrandr' 'libxv' 'libxi' 'alsa-lib'
      'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'libxinerama' 'libxcursor' 'qtwebkit')
    optdepends=('postgresql-libs: PostgreSQL driver'
	  'libmysqlclient: MySQL driver'
	  'unixodbc: ODBC driver'
	  'libxinerama: Xinerama support'
	  'libxfixes: Xfixes support')
    conflicts=('qt-doc' 'qt-debug' 'qt-demos' 'qt-tools')
    provides=('qt-tools')
    install='qt.install'
	
    cd $srcdir/$_pkgfqn
	make INSTALL_ROOT=$pkgdir install

	# install missing icons and desktop files
	for icon in tools/linguist/linguist/images/icons/linguist-*-32.png ; do
		size=$(echo $(basename ${icon}) | cut -d- -f2)
		install -p -D -m644 ${icon} ${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/linguist.png
	done
	install -p -D -m644 src/gui/dialogs/images/qtlogo-64.png ${pkgdir}/usr/share/icons/hicolor/64x64/apps/qtlogo.png
	install -p -D -m644 tools/assistant/tools/assistant/images/assistant.png ${pkgdir}/usr/share/icons/hicolor/32x32/apps/assistant.png
	install -p -D -m644 tools/designer/src/designer/images/designer.png ${pkgdir}/usr/share/icons/hicolor/128x128/apps/designer.png
	install -d ${pkgdir}/usr/share/applications
	install -m644 ${srcdir}/{linguist,designer,assistant,qtconfig}.desktop ${pkgdir}/usr/share/applications/

	# install license addition
	install -D -m644 LGPL_EXCEPTION.txt ${pkgdir}/usr/share/licenses/qt/LGPL_EXCEPTION.txt

	# Fix wrong path in pkgconfig files
	find ${pkgdir}/usr/lib/pkgconfig -type f -name '*.pc' \
		-exec perl -pi -e "s, -L${srcdir}/?\S+,,g" {} \;
	# Fix wrong path in prl files
	find ${pkgdir}/usr/lib -type f -name '*.prl' \
		-exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

package_qt-private-headers(){
    pkgdesc="Qt private headers for development"
    depends=("qt=${pkgver}")

    install -d ${pkgdir}/usr/include/{QtCore,QtDeclarative,QtGui,QtScript}
    install -d ${pkgdir}/usr/src/{corelib,declarative,gui,script}
    
    for i in QtCore QtDeclarative QtGui QtScript; do
      cp -r ${srcdir}/$_pkgfqn/include/${i}/private/ \
        ${pkgdir}/usr/include/${i}/
    done

    for i in corelib declarative gui script; do
      cp -r ${srcdir}/$_pkgfqn/src/${i} ${pkgdir}/usr/src/
    done
}
