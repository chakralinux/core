#
# Chakra Packages for Chakra, part of chakra-project.org
#
# maintainer (i686): Phil Miller <philm[at]chakra-project[dog]org>
# maintainer (x86_64): Manuel Tortosa <manutortosa[at]chakra-project[dot]org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: libtool requires rebuilt with each new gcc version

pkgname=('gcc' 'gcc-libs' 'gcc-fortran' 'gcc-objc' 'gcc-ada')
pkgver=4.5.2
pkgrel=2
_snapshot=4.5-20110414
_libstdcppmanver=4.5.2		# Note: check source directory name when updating this
# dash the next line if you want to skip the tests
_test=1
pkgdesc="The GNU Compiler Collection"
arch=('i686' 'x86_64')
license=('GPL' 'LGPL' 'FDL' 'custom')
url="http://gcc.gnu.org"
makedepends=('binutils>=2.21' 'libmpc' 'cloog' 'ppl' 'gcc-ada' 'dejagnu' 'autogen')
options=('!libtool' '!emptydirs' 'log')
source=(#ftp://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-{ada,core,fortran,g++,objc,testsuite}-${pkgver}.tar.bz2
	ftp://gcc.gnu.org/pub/gcc/snapshots/${_snapshot}/gcc-{ada,core,fortran,g++,objc,testsuite}-${_snapshot}.tar.bz2
	ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/libstdc++-api-${_libstdcppmanver}.man.tar.bz2
	gcc_pure64.patch
	gcc-hash-style-both.patch)
md5sums=('ade664262a1ba3ffe225736015f9838c' # gcc-ada-4.5-20110414.tar.bz2
         '106576d9f0199aabf4502595df7a4e2f' # gcc-core-4.5-20110414.tar.bz2
         'cb08be45a9076ede7f07df09b94b69cb' # gcc-fortran-4.5-20110414.tar.bz2
         'afba04145c112809cd53d38b1acb66fb' # gcc-g++-4.5-20110414.tar.bz2
         'a94a001b90d1b1fa8ba67166a0f27e7d' # gcc-objc-4.5-20110414.tar.bz2
         '478c563e98b13ef150529bb851b83a21' # gcc-testsuite-4.5-20110414.tar.bz2
         '2776eab5ebb7f9cc62dd2199a3a24382'
         '4030ee1c08dd1e843c0225b772360e76'
         '6fd395bacbd7b6e47c7b74854b478363')


if [ -n "${_snapshot}" ]; then
  _basedir="${srcdir}/gcc-${_snapshot}"
else
  _basedir="${srcdir}/gcc-${pkgver}"
fi

build() {
  cd ${_basedir}

  # "Add" ppl-0.11 compatibility
  sed -i "/ppl_minor_version=/s#10#11#" configure

  # Do not install libiberty
  sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in

  # Do not run fixincludes
  sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

  if [ "${CARCH}" = "x86_64" ]; then
    patch -Np1 -i ${srcdir}/gcc_pure64.patch
  fi
  patch -Np0 -i ${srcdir}/gcc-hash-style-both.patch

  echo ${pkgver} > gcc/BASE-VER

  cd ${srcdir}
  rm -vRf gcc-build
  mkdir gcc-build && cd gcc-build
  ${_basedir}/configure --prefix=/usr \
      --libdir=/usr/lib --libexecdir=/usr/lib \
      --mandir=/usr/share/man --infodir=/usr/share/info \
      --with-bugurl=http://chakra-project.org/bugs/ \
      --enable-languages=c,c++,ada,fortran,lto,objc,obj-c++ \
      --enable-shared --enable-threads=posix \
      --with-system-zlib --enable-__cxa_atexit \
      --disable-libunwind-exceptions --enable-clocale=gnu \
      --enable-gnu-unique-object --enable-linker-build-id \
      --with-ppl --enable-cloog-backend=isl \
      --enable-lto --enable-gold --enable-ld=default \
      --enable-plugin --with-plugin-ld=ld.gold \
      --disable-multilib --disable-libstdcxx-pch \
      --enable-checking=release
  make

  if [ -n "${_test}" ]; then
    echo "<<< STARTING TESTS >>>"
    # increase stack size to prevent test failures
    # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=31827
    ulimit -s 32768
    # do not abort on error as some are "expected"
    make -k check || true
    ${_basedir}/contrib/test_summary
    echo "<<< ENDING TESTS >>>"
  fi
}

package_gcc-libs()
{
  pkgdesc="Runtime libraries shipped by GCC for C and C++ languages"
  groups=('base')
  depends=('glibc>=2.11.1-2')
  install=gcc-libs.install

  cd gcc-build
  make -j1 -C $CHOST/libgcc DESTDIR=${pkgdir} install-shared
  for lib in libmudflap libgomp libssp libstdc++-v3/src; do
    make -j1 -C $CHOST/$lib DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  done
  make -j1 -C $CHOST/libstdc++-v3/po DESTDIR=${pkgdir} install
  make -j1 -C $CHOST/libgomp DESTDIR=${pkgdir} install-info

  make -j1 DESTDIR=${pkgdir} install-target-libgfortran

  make -j1 DESTDIR=${pkgdir} install-target-libobjc
  # I thought I said to only install the lib...
  rm -rf ${pkgdir}/usr/lib/gcc/

  # remove static libraries
  find ${pkgdir} -name *.a -delete
  
  # Install Runtime Library Exception
  install -Dm644 ${_basedir}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc()
{
  depends=('binutils>=2.20.1' 'libmpc>=0.8.1-1' 'cloog-ppl>=0.15.9-2' 'elfutils')
  groups=('base-devel')
  install=gcc.install

  cd gcc-build
  
  # much, much easier to install the lot and clean-up the mess
  make -j1 DESTDIR=${pkgdir} install
  rm $pkgdir/usr/bin/{*gfortran,gnat*}
  rm $pkgdir/usr/lib/gcc/$CHOST/${pkgver}/{ada{include,lib},finclude,include/objc}/*
  rm $pkgdir/usr/lib/gcc/$CHOST/${pkgver}/{cc1obj{,plus},f951,gnat1,libgfortranbegin.a}
  rm $pkgdir/usr/lib/{*.so*,lib{gfortran,objc}.a}
  rm $pkgdir/usr/share/info/{gfortran,gnat*,libgomp}.info
  rm $pkgdir/usr/share/locale/{de,fr}/LC_MESSAGES/libstdc++.mo
  rm $pkgdir/usr/share/man/man1/gfortran.1

  # many packages require these symlinks
  install -dm755 ${pkgdir}/lib
  ln -sf /usr/bin/cpp ${pkgdir}/lib/cpp
  ln -sf gcc ${pkgdir}/usr/bin/cc
  ln -sf g++ ${pkgdir}/usr/bin/c++

  # POSIX conformance launcher scripts for c89 and c99
  cat > $pkgdir/usr/bin/c89 <<"EOF"
#!/bin/sh
fl="-std=c89"
for opt; do
  case "$opt" in
    -ansi|-std=c89|-std=iso9899:1990) fl="";;
    -std=*) echo "`basename $0` called with non ANSI/ISO C option $opt" >&2
	    exit 1;;
  esac
done
exec gcc $fl ${1+"$@"}
EOF

  cat > $pkgdir/usr/bin/c99 <<"EOF"
#!/bin/sh
fl="-std=c99"
for opt; do
  case "$opt" in
    -std=c99|-std=iso9899:1999) fl="";;
    -std=*) echo "`basename $0` called with non ISO C99 option $opt" >&2
	    exit 1;;
  esac
done
exec gcc $fl ${1+"$@"}
EOF

  chmod 755 $pkgdir/usr/bin/c{8,9}9

  # install the libstdc++ man pages
  install -dm755 ${pkgdir}/usr/share/man/man3
  install -m644 ${srcdir}/libstdc++-api-${_libstdcppmanver}.man/man3/* \
    ${pkgdir}/usr/share/man/man3/
  # deal with conflicts...
  rm -f ${pkgdir}/usr/share/man/man3/{ctime,queue,random,regex,string}.3
  rm -f ${pkgdir}/usr/lib/libffi.a
  rm -f ${pkgdir}/usr/share/man/man3/{ffi,ffi_call,ffi_prep_cif}.3

  # Install Runtime Library Exception
  install -Dm644 ${_basedir}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc-fortran()
{
  pkgdesc="Fortran front-end for GCC"
  depends=("gcc=$pkgver-$pkgrel")
  install=gcc-fortran.install

  cd gcc-build
  make -j1 DESTDIR=$pkgdir install-target-libgfortran
  make -j1 -C $CHOST/libgomp DESTDIR=$pkgdir install-nodist_fincludeHEADERS
  make -j1 -C gcc DESTDIR=$pkgdir fortran.install-{common,man,info}
  install -Dm755 gcc/f951 $pkgdir/usr/lib/gcc/$CHOST/$pkgver/f951
  
  # remove libraries included in gcc-libs
  rm -f ${pkgdir}/usr/lib/libgfortran.so*
  
  # Install Runtime Library Exception
  install -Dm644 ${_basedir}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-fortran/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc-objc()
{
  pkgdesc="Objective-C front-end for GCC"
  depends=("gcc=$pkgver-$pkgrel")

  cd gcc-build
  make -j1 DESTDIR=$pkgdir install-target-libobjc
  install -dm755 $pkgdir/usr/lib/gcc/$CHOST/$pkgver/
  install -m755 gcc/cc1obj{,plus} $pkgdir/usr/lib/gcc/$CHOST/$pkgver/

  # remove libraries included in gcc-libs
  rm -f ${pkgdir}/usr/lib/libobjc.so*

  # Install Runtime Library Exception
  install -Dm644 ${_basedir}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-objc/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc-ada()
{
  pkgdesc="Ada front-end for GCC (GNAT)"
  depends=("gcc=$pkgver-$pkgrel")
  install=gcc-ada.install

  cd gcc-build/gcc
  make -j1 DESTDIR=$pkgdir ada.install-{common,info}
  install -m755 gnat1 $pkgdir/usr/lib/gcc/$CHOST/$pkgver
  
  # Install Runtime Library Exception
  install -Dm644 ${_basedir}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-ada/RUNTIME.LIBRARY.EXCEPTION
}