# Maintainer: Neophytos Kolokotronis <tetris4 AT gmail DOT com>

_extramodules=extramodules-3.14-CHAKRA-LTS
_kver="$(cat /lib/modules/${_extramodules}/version)"
_kernelver=3.14.44

url_ref="http://support.amd.com/en-us/download/desktop?os=Linux+x86"
DLAGENTS="http::/usr/bin/curl --referer ${url_ref} -o %o %u"

pkgname=catalyst-lts
pkgver=14.12
pkgrel=2
_amdver=14.501.1003
pkgdesc="AMD/ATI Catalyst drivers for linux. fglrx kernel module only"
arch=('x86_64')
url="http://www.amd.com"
screenshot="http://linuxtation3.files.wordpress.com/2007/03/pantallazo.jpg"
license=('custom')
depends=("linux-lts=${_kernelver}" 'catalyst-utils')
makedepends=('gcc-libs' 'gcc>4.0.0' 'make' "linux-lts-headers=${_kernelver}")
conflicts=('catalyst-test' 'nvidia' 'xf86-video-ati' 'xf86-video-radeonhd')
install=catalyst.install

url_ref="http://support.amd.com/en-us/download/desktop?os=Linux+x86"
DLAGENTS="http::/usr/bin/curl --referer ${url_ref} -o %o %u"

source=(
        http://www2.ati.com/drivers/linux/amd-catalyst-omega-${pkgver}-linux-run-installers.zip
#        http://archive.ubuntu.com/ubuntu/pool/restricted/f/fglrx-installer/fglrx-installer_14.201.orig.tar.gz
        ati_make.sh
        ati-compat_alloc_user_space.patch
        lano1106_fglrx_intel_iommu.patch
        lano1106_kcl_agp_13_4.patch
        makefile_compat.patch
        kolasa_fglrx_312.patch
        cold-fglrx-3.14-current_euid.patch)

md5sums=('ced4329274a02712406bda678ffbd743'
         'fd98b7e486d7fd4cad8de7b95b5b031e'
         '21013e49598edfffa7f37b62b2d6a930'
         '5184b94a2a40216a67996999481dd9ee'
         'c5156eddf81c8a1719b160d05a2e8d67'
         '3e1b82bd69774ea808da69c983d6a43b'
         'ef66b0b679f53259a5b4d15f2111ee0d'
         'ba33b6ef10896d3e1b5e4cd96390b771')

build() {   
  ## Unpack archive
#      /bin/sh ./amd-catalyst-${pkgver}-linux-x86.x86_64.run --extract archive_files
     /bin/sh ./fglrx-${_amdver}/amd-driver-installer-${_amdver}-x86.x86_64.run --extract archive_files
   #mkdir common
   #mv etc lib usr common
   #mkdir archive_files
   #mv arch common xpic xpic_64a archive_files
    
    msg "Setting compilation variables ..."
    # include ati_make.sh and use _ati_check function from it
    . ati_make.sh
    _ati_check

    BUILDARCH=x86_64
   _archdir=x86_64

    cd "${srcdir}/archive_files/"


    msg "Applying patch(es) ..."
    ## makefile patch to choose arch_compat_alloc_user_space or older compat_alloc_user_space
    ## works only in combination with ati_make.sh script
    patch -Np1 -i ${srcdir}/ati-compat_alloc_user_space.patch
    patch -Np1 -i ${srcdir}/makefile_compat.patch
    patch -Np1 -i ${srcdir}/lano1106_fglrx_intel_iommu.patch
    patch -Np1 -i ${srcdir}/lano1106_kcl_agp_13_4.patch
    patch -Np1 -i ${srcdir}/cold-fglrx-3.14-current_euid.patch

    cd "${srcdir}/archive_files/common/lib/modules/fglrx/build_mod"
    patch -Np1 -i ${srcdir}/kolasa_fglrx_312.patch    
    cp "${srcdir}/archive_files/arch/${_archdir}/lib/modules/fglrx/build_mod/libfglrx_ip.a" . 
    cp 2.6.x/Makefile . 

    msg "Compiling fglrx module ..."
    # Compile module using _ati_check variables
    CFLAGS_MODULE="-DMODULE -DATI -DFGL -DPAGE_ATTR_FIX=$PAGE_ATTR_FIX -DCOMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE $def_smp $def_modversions"
    
 
     make -C /usr/lib/modules/${_kver}//build SUBDIRS="`pwd`" ARCH=${BUILDARCH} \
        MODFLAGS="-DMODULE -DATI -DFGL -DPAGE_ATTR_FIX=$PAGE_ATTR_FIX -DCOMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE $def_smp $def_modversions" \
        PAGE_ATTR_FIX=$PAGE_ATTR_FIX COMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE modules
}

package() {
    # here we are checking kernel's extramodules dir
    for r in /usr/lib/modules/*; do
      s=${r:17}
      if [[ ${s:0:3} = "ext" ]]; then
        if [[ `cat ${r}/version | grep -c ${_kver}` != 0 ]]; then
          _destidir=${s}
          sed -i -e "s/EXTRAMODULES=.*/EXTRAMODULES=${s}/" $startdir/catalyst.install
        fi
        elif [[ ${s} = ${_kver} ]] && [[ ! -e ${r}/extramodules ]]; then
          _destidir=${_kver}/video
          sed -i -e "s/EXTRAMODULES=.*/EXTRAMODULES=null/" $startdir/catalyst.install
      fi
    done


    cd "${srcdir}/archive_files/common/lib/modules/fglrx/build_mod"
    install -m755 -d "${pkgdir}/usr/lib/modules/${_destidir}/" 
    install -m644 fglrx.ko "${pkgdir}/usr/lib/modules/${_destidir}/" 
    find "${pkgdir}" -name '*.ko' -exec gzip -9 {} \;
    sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kver}/" $startdir/catalyst.install

    # License
    install -m755 -d "${pkgdir}/usr/share/licenses/${pkgname}"
#    install -m644 "${srcdir}/archive_files/LICENSE.TXT" "${pkgdir}/usr/share/licenses/${pkgname}/"
    install -m644 ${srcdir}/archive_files/common/usr/share/doc/fglrx/LICENSE.TXT ${pkgdir}/usr/share/licenses/${pkgname}
}
